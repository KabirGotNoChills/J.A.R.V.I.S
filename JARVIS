import pyttsx3
import speech_recognition as sr
import os
import requests

# Load Gemini API Key from environment variable
gemini_api_key = os.getenv("your gemini api key")

def speak(text):
    """Convert text to speech."""
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

def listen_command():
    """Listen for a voice command."""
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)  # Adjust for ambient noise
        audio = recognizer.listen(source)
    try:
        command = recognizer.recognize_google(audio)
        print(f"User said: {command}")
    except sr.UnknownValueError:
        print("Sorry, I did not catch that.")
        command = None
    except sr.RequestError:
        print("Could not request results from Google Speech Recognition service.")
        command = None
    return command

def get_gemini_data(endpoint):
    """Fetch data from Gemini API"""
    url = f"https://api.gemini.com/v1/{endpoint}"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {gemini_api_key}"
    }
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()  # Check for HTTP errors
        return response.json()
    except requests.exceptions.HTTPError as errh:
        print("Http Error:", errh)
    except requests.exceptions.ConnectionError as errc:
        print("Error Connecting:", errc)
    except requests.exceptions.Timeout as errt:
        print("Timeout Error:", errt)
    except requests.exceptions.RequestException as err:
        print("Oops: Something Else", err)
    return None

def jarvis():
    """Main function to run Jarvis."""
    speak("Hello SIR,, i am JARVIS,,,, your personal assistant. I can also give you a blow job if you really beg me and give me a sqwart first")
    command = listen_command()
    
    if command:
        if "hello" in command.lower():
            speak("Hello! How can I help you?")
        elif "how are you" in command.lower():
            speak("I am just a program, but I am functioning as expected.")
        elif "what is your name" in command.lower():
            speak("I am Jarvis, your personal assistant.")
        elif "bitcoin price" in command.lower():
            print("Let me check the latest price for you.")
            speak("Let me check the latest price for you.")
            
            data = get_gemini_data("pubticker/btcusd")
            if data:
                price = data.get("last", "Unknown")
                print(f"The current price of Bitcoin is {price} dollars.")
                speak(f"The current price of Bitcoin is {price} dollars.")
            else:
                speak("Sorry, I couldn't fetch the price right now.")
        else:
            speak("Sorry, I don't understand that command.")
        
    
if __name__ == "__main__":
    jarvis()
